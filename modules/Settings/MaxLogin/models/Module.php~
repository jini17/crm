<?php
/*+***********************************************************************************************************************************
 * The contents of this file are subject to the YetiForce Public License Version 1.1 (the "License"); you may not use this file except
 * in compliance with the License.
 * Software distributed under the License is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
 * See the License for the specific language governing rights and limitations under the License.
 * The Original Code is YetiForce.
 * The Initial Developer of the Original Code is YetiForce. Portions created by YetiForce are Copyright (C) www.yetiforce.com. 
 * All Rights Reserved.
 *************************************************************************************************************************************/
class Settings_MaxLogin_Module_Model extends Settings_Vtiger_Module_Model {
	public function getConfig() {
		$db = PearDatabase::getInstance();
		$result = $db->query("SELECT * FROM vtiger_maxlogin", true);
		for($i = 0; $i < $db->num_rows($result); $i++){
			$output[] = $db->query_result($result, $i, 'value');
		}
		return $output;
	}

	static public function getBruteForceSettings() {
		$db = PearDatabase::getInstance();
		$result = $db->query("SELECT * FROM vtiger_maxlogin", true);
		$output = $db->query_result_rowdata($result, 0);
		return $output;
	}    

	static public function getBlockedUsers() {		
		$db = PearDatabase::getInstance();
		$bruteforceSettings = self::getBruteForceSettings();
		$attempsNumber = $bruteforceSettings[0];
		
		$query = "SELECT  COUNT(*) AS COUNT, GROUP_CONCAT(DISTINCT(user_ip)) as userips, user_name, login_time, GROUP_CONCAT(DISTINCT(browser)) as browsers"
			 . " FROM `vtiger_loginhistory` vlh WHERE "
			 . "STATUS = 'Failed login' AND unblock=0 "
			 . "GROUP BY user_name "
			 . "HAVING COUNT >= ?";
		$result = $db->pquery($query, array($attempsNumber));       

		for ($i=0; $i < $db->num_rows($result); $i++) {

			$output[$i]['userips'] = $db->query_result($result, $i, 'userips');
			$output[$i]['username'] = $db->query_result($result, $i, 'user_name');
			$output[$i]['date'] = $db->query_result($result, $i, 'login_time');
			$output[$i]['browsers'] = $db->query_result($result, $i, 'browsers');
		} 
		return $output;
	}

	static public function browserDetect() {
	   
		$browser = $_SERVER['HTTP_USER_AGENT'];
	   
		if(strpos($browser, 'MSIE') !== FALSE)
		   return 'Internet explorer';
		 elseif(strpos($browser, 'Trident') !== FALSE) //For Supporting IE 11
			return 'Internet explorer';
		 elseif(strpos($browser, 'Firefox') !== FALSE)
		   return 'Mozilla Firefox';
		 elseif(strpos($browser, 'Chrome') !== FALSE)
		   return 'Google Chrome';
		 elseif(strpos($browser, 'Opera Mini') !== FALSE)
		   return "Opera Mini";
		 elseif(strpos($browser, 'Opera') !== FALSE)
		   return "Opera";
		 elseif(strpos($browser, 'Safari') !== FALSE)
		   return "Safari";
		 else
		   return 'unknow';       
	}

	static public function checkBlocked($username) {
		$db = PearDatabase::getInstance();

		$query = "SELECT * FROM `vtiger_maxlogin` LIMIT 1";    
		$result = $db->pquery($query, array());
		$ip = $_SERVER['REMOTE_ADDR'];
		$now = date("Y-m-d H:i:s");

		$bruteforceSettings =  $db->query_result_rowdata($result, 0);
		$attempsNumber = $bruteforceSettings[0];
		$blockTime = $bruteforceSettings[1];
		  
		$query = "SELECT count(login_id) as cn FROM `vtiger_loginhistory` vlh WHERE STATUS = 'Failed login' && user_name = ? && unblock = 0";
		$result = $db->pquery($query, array ($username) );
		$counts = $db->query_result_rowdata($result, 0);
		if($counts[0] > $attempsNumber){
			return true;
		}
		return false;
	}	
}
